{"version":3,"sources":["actions/action.js","components/AddTodo.js","components/TodoList.js","components/FilterLink.js","components/Filters.js","App.js","reducers/reducer.js","index.js"],"names":["nextTodoId","todolistFilters","connect","input","dispatch","className","onSubmit","e","text","preventDefault","value","trim","type","id","ref","node","getTodoList","todos","filter","t","completed","Error","state","todolistFilter","toggleTodo","map","todo","onClick","style","textDecoration","ownProps","active","setTodoListFilter","children","disabled","marginLeft","Filters","App","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"sKAAIA,EAAa,EAuBJC,EACC,WADDA,EAEO,iBAFPA,EAGI,cCEFC,iBAxBC,SAAC,GAAe,IACxBC,EADUC,EAAa,EAAbA,SAYd,OACI,8BACI,uBAAMC,UAAU,OAAQC,SAXhB,SAACC,GDLE,IAAAC,GCMfD,EAAEE,iBAEEN,EAAMO,MAAMC,UAEhBP,GDVeI,ECUEL,EAAMO,MDVC,CAC5BE,KAAM,WACNC,GAAIb,IACJQ,UCQIL,EAAMO,MAAQ,KAKV,UACI,uBAAOI,IAAK,SAAAC,GAAI,OAAIZ,EAAQY,KAC5B,wBAAQH,KAAK,SAAb,8BCbVI,EAAc,SAACC,EAAOC,GAC1B,OAAOA,GACL,KAAKjB,EACH,OAAOgB,EACT,KAAKhB,EACH,OAAOgB,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aAC7B,KAAKnB,EACH,OAAOgB,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aAC7B,QACE,MAAM,IAAIC,MAAM,iBAAmBH,KAkC1BhB,eA9BS,SAAAoB,GACpB,MAAQ,CACJL,MAAOD,EAAYM,EAAML,MAAOK,EAAMC,oBAInB,SAAAnB,GACzB,MAAO,CACLoB,WAAY,SAAAX,GAAE,OAAIT,EFfI,SAAAS,GAAE,MAAK,CAC7BD,KAAM,cACNC,MEa2BW,CAAWX,QAsB3BX,EAlBE,SAAC,GAAyB,IAAxBe,EAAuB,EAAvBA,MAAOO,EAAgB,EAAhBA,WACtB,OACI,8BACI,6BACKP,EAAMQ,KAAI,SAACC,GAAD,OACP,oBACEC,QAAW,kBAAMH,EAAWE,EAAKb,KAEjCe,MAAS,CAACC,eAAgBH,EAAKN,UAAY,eAAiB,QAH9D,SAKGM,EAAKlB,MAHCkB,EAAKb,cCfnBX,eApBS,SAACoB,EAAOQ,GAAR,MAAsB,CAC5CC,OAAQD,EAASZ,SAAWI,EAAMU,sBAGT,SAAC5B,EAAU0B,GAAX,MAAyB,CAClDH,QAAS,kBAAMvB,EHS2B,CACxCQ,KAAM,sBACNM,OGXwCY,EAASZ,aAetChB,EAZI,SAAC,GAAiC,IAAhC6B,EAA+B,EAA/BA,OAAQE,EAAuB,EAAvBA,SAAUN,EAAa,EAAbA,QACrC,OACE,wBACEA,QAAWA,EACXO,SAAYH,EACZH,MAAS,CAACO,WAAY,OAHxB,SAKGF,OCJQG,EAXC,WACZ,OACI,gCACI,yCACA,cAAC,EAAD,CAAYlB,OAAUjB,EAAtB,iBACA,cAAC,EAAD,CAAYiB,OAAUjB,EAAtB,oBACA,cAAC,EAAD,CAAYiB,OAAUjB,EAAtB,2BCKGoC,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,eCsBSiC,cAAgB,CAC7BrB,MA9BY,WAAyB,IAAxBK,EAAuB,uDAAf,GAAIiB,EAAW,uCAClC,OAAOA,EAAO3B,MACV,IAAK,WACH,MAAM,GAAN,mBACKU,GADL,CAEE,CACIT,GAAI0B,EAAO1B,GACXL,KAAM+B,EAAO/B,KACbY,WAAW,KAGjB,IAAK,cACH,OAAOE,EAAMG,KAAI,SAAAC,GAAI,OAClBA,EAAKb,KAAO0B,EAAO1B,GAApB,YAAC,eACGa,GADJ,IACUN,WAAYM,EAAKN,YAC3BM,KAEN,QAAS,OAAOJ,IActBC,eAVqB,WAA+C,IAA9CD,EAA6C,uDAArCrB,EAA0BsC,EAAW,uCACnE,OAAOA,EAAO3B,MACZ,IAAK,sBACH,OAAO2B,EAAOrB,OAChB,QAAS,OAAOI,MCrBdkB,EAAQC,YAAYC,GAE1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.ec9ddd26.chunk.js","sourcesContent":["let nextTodoId = 0;\r\n\r\nexport const addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n});\r\n\r\nexport const todolistFilter = filter => ({\r\n    type: 'SET_TODOLIST_FILTER',\r\n    filter\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n});\r\n\r\nexport const setTodoListFilter = filter => ({\r\n    type: 'SET_TODOLIST_FILTER',\r\n    filter\r\n})\r\n\r\nexport const todolistFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n};","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../actions/action.js';\r\n\r\nconst AddTodo = ({dispatch}) =>{\r\n    let input;\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!input.value.trim()) return;\r\n        \r\n        dispatch(addTodo(input.value));\r\n        input.value = '';\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\"  onSubmit={addTask}>\r\n                <input ref={node => input = node} />\r\n                <button type=\"submit\">\r\n                    Add Todo\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect()(AddTodo);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  todolistFilters,\r\n  toggleTodo\r\n} from '../actions/action';\r\n\r\nconst getTodoList = (todos, filter) => {\r\n  switch(filter) {\r\n    case todolistFilters.SHOW_ALL:\r\n      return todos;\r\n    case todolistFilters.SHOW_ACTIVE:\r\n      return todos.filter(t =>!t.completed);\r\n    case todolistFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed);\r\n    default:\r\n      throw new Error('unknown filter' + filter);\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        todos: getTodoList(state.todos, state.todolistFilter)\r\n    });\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n  };\r\n};\r\n\r\nconst TodoList = ({todos, toggleTodo}) => {\r\n    return (\r\n        <div>\r\n            <ul> \r\n                {todos.map((todo) => (\r\n                    <li \r\n                      onClick = {() => toggleTodo(todo.id)}\r\n                      key = {todo.id}\r\n                      style = {{textDecoration: todo.completed ? 'line-through' : 'none'}}\r\n                    >\r\n                      {todo.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setTodoListFilter } from '../actions/action';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.setTodoListFilter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setTodoListFilter(ownProps.filter))\r\n});\r\n\r\nconst FilterLink = ({active, children, onClick}) => {\r\n  return (\r\n    <button\r\n      onClick = {onClick}\r\n      disabled = {active}\r\n      style = {{marginLeft: '4px'}}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterLink);","import React from \"react\";\r\nimport FilterLink from './FilterLink';\r\nimport {todolistFilters} from '../actions/action';\r\n\r\nconst Filters = () => {\r\n    return (\r\n        <div>\r\n            <span>Show:</span>\r\n            <FilterLink filter = {todolistFilters.SHOW_ALL}>All</FilterLink>\r\n            <FilterLink filter = {todolistFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n            <FilterLink filter = {todolistFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filters;","import React from 'react';\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport Filters from \"./components/Filters\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddTodo />\n      <TodoList />\n      <Filters />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { todolistFilters } from '../actions/action';\r\n\r\nconst todos = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n          return [\r\n            ...state,\r\n            {\r\n                id: action.id,\r\n                text: action.text,\r\n                completed: false\r\n            }\r\n          ];\r\n          case 'TOGGLE_TODO':\r\n            return state.map(todo =>\r\n              (todo.id === action.id) ?\r\n              {...todo, completed: !todo.completed}:\r\n              todo\r\n          )\r\n        default: return state;\r\n    }\r\n};\r\n\r\nconst todolistFilter = (state = todolistFilters.SHOW_ALL, action) => {\r\n  switch(action.type) {\r\n    case 'SET_TODOLIST_FILTER':\r\n      return action.filter;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  todolistFilter\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}